1)Lineup:

FW
LW
RW

CM
CM
DM

LB
CB
CB
RB

GK

2)Metrics:

a)stats:
games_starts-6
minutes_90s-5.2
goals-4
assists-1
pens_att-2
goals_assists_per90-2.00
xg_assists-2.5

b)keepers:
gk_games_starts
gk_goals_against
gk_save_pct
gk_clean_sheets_pct
gk_pens_save_pct

b1)keepersadv:
gk_passes_completed_launched
gk_crosses_stopped_pct

c)shooting:
shots_on_target_pct
goals_per_shot_on_target

d)passing:
passes_pct
passes_into_final_third
passes_into_penalty_area
progressive_passes

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"
"gca_shots": "Shots that lead to another goal-scoring shot"

f)defense:
tackles_won
dribble_tackles_pct
blocks
clearances
tackles_interceptions
errors

g)possession:
dribbles_completed_pct
dispossessed


h)misc:
cards_red,ball_recoveries,aerials_won_pct


3)Entries
GK-42
Others-681
player playing time-830


4)Metrics for all positions


FW:
a)stats:
games_starts-6
minutes_90s-5.2
goals-4
assists-1
pens_att-2
goals_assists_per90-2.00
xg_assists-2.5
shots_on_target_pct-80%
goals_per_shot_on_target-1
passes_pct-
passes_into_penalty_area-

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"
"gca_shots": "Shots that lead to another goal-scoring shot"


g)possession:
dispossessed


h)misc:
ball_recoveries
aerials_won_pct


LW+RW:
a)stats:
games_starts
minutes_90s
goals
assists
pens_att
goals_assists_per90
xg
xg_assists

c)shooting:
shots_on_target_pct
goals_per_shot_on_target

d)passing:
passes_pct
passes_into_final_third
passes_into_penalty_area
progressive_passes

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"
"gca_shots": "Shots that lead to another goal-scoring shot"


g)possession:
dribbles_completed_pct
dispossessed


h)misc:
ball_recoveries


CM:
a)stats:
games_starts
minutes_90s
assists
goals_assists_per90
xg
xg_assists

c)shooting:
shots_on_target_pct
goals_per_shot_on_target

d)passing:
passes_pct
passes_into_final_third
passes_into_penalty_area
progressive_passes

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"
"gca_shots": "Shots that lead to another goal-scoring shot"

f)defense:
tackles_won
dribble_tackles_pct
blocks
clearances
tackles_interceptions
errors

g)possession:
dribbles_completed_pct
dispossessed


h)misc:
cards_red,ball_recoveries


DM:
a)stats:
games_starts
minutes_90s
assists
goals_assists_per90
xg
xg_assists

c)shooting:
shots_on_target_pct
goals_per_shot_on_target

d)passing:
passes_pct
passes_into_final_third
passes_into_penalty_area
progressive_passes

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"
"gca_shots": "Shots that lead to another goal-scoring shot"

f)defense:
tackles_won
dribble_tackles_pct
blocks
clearances
tackles_interceptions
errors

g)possession:
dribbles_completed_pct
dispossessed


h)misc:
cards_red,ball_recoveries

LB+RB:
a)stats:
games_starts
minutes_90s
assists
xg
xg_assists

d)passing:
passes_pct
passes_into_final_third
passes_into_penalty_area
progressive_passes

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"
"gca_shots": "Shots that lead to another goal-scoring shot"

f)defense:
tackles_won
dribble_tackles_pct
blocks
clearances
tackles_interceptions
errors

g)possession:
dribbles_completed_pct
dispossessed


h)misc:
cards_red,ball_recoveries,aerials_won_pct


CB:

a)stats:
games_starts
minutes_90s

d)passing:
passes_pct
progressive_passes

e)gca:
"gca_dribbles": "Successful dribbles that lead to a goal"

f)defense:
tackles_won
dribble_tackles_pct
blocks
clearances
tackles_interceptions
errors

g)possession:
dribbles_completed_pct
dispossessed


h)misc:
cards_red,ball_recoveries,aerials_won_pct



GK:

b)keepers:
gk_games_starts
gk_goals_against
gk_save_pct
gk_clean_sheets_pct
gk_pens_save_pct

b1)keepersadv:
gk_passes_completed_launched
gk_crosses_stopped_pct
















df
df_gk
df_gkadv
df_shoot
df_pass
df_gca
df_def
df_pos
df_misc



# Reading csv file using pandas and converting it into dataframe
df_misc=pd.read_csv('csv files/player_.csv')


# Printing first few values of Dataframe
df_misc.head()

# Checking if it's converted to DataFrame
type(df_misc)

# removing columns that are not required

# Assuming df is a list
df_misc = pd.DataFrame(df_misc, columns=['player','position','team',''

# Printing first few values of Dataframe
df_misc.head()

# Replacing NaN values with 0
df_misc.fillna(0,inplace=True)
df_misc.head(10)
